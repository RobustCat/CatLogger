<controls:UiServiceAwareWindow
    x:Class="CatLogger.LogSetting.LoggerWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="clr-namespace:CatLogger.Behaviors"
    xmlns:controls="clr-namespace:CatLogger.Controls"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:models="clr-namespace:CatLogger.Models"
    xmlns:utilities="clr-namespace:CatLogger.Utilities"
    Title="Logging"
    Width="800"
    Height="600"
    Loaded="WindowLoaded">
    <Window.CommandBindings>
        <CommandBinding
            CanExecute="CanCopyExecuteHandler"
            Command="ApplicationCommands.Copy"
            Executed="CopyCommandHandler" />
    </Window.CommandBindings>
    <Window.Resources>
        <ContextMenu x:Key="SharedInstanceContextMenu">
            <MenuItem Command="ApplicationCommands.Copy" Header="Copy" />
        </ContextMenu>
        <Style
            x:Key="ListBoxItemContainerStyle"
            BasedOn="{StaticResource {x:Type ListBoxItem}}"
            TargetType="{x:Type ListBoxItem}">
            <Setter Property="ContextMenu" Value="{StaticResource SharedInstanceContextMenu}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
        </Style>
        <utilities:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="160" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <GroupBox Margin="7" Style="{Binding null}">
            <StackPanel>
                <CheckBox
                    x:Name="chkOff"
                    Margin="7"
                    Command="{Binding Path=CheckTraceLevel}"
                    IsChecked="{Binding IsOffChecked, Mode=TwoWay}">
                    Off
                </CheckBox>
                <CheckBox
                    x:Name="chkError"
                    Margin="7"
                    Command="{Binding Path=CheckTraceLevel}"
                    Foreground="Red"
                    IsChecked="{Binding IsErrorChecked, Mode=TwoWay}">
                    Error
                </CheckBox>
                <CheckBox
                    x:Name="chkWarning"
                    Margin="7"
                    Command="{Binding Path=CheckTraceLevel}"
                    Foreground="Goldenrod"
                    IsChecked="{Binding IsWarningChecked, Mode=TwoWay}">
                    Warning
                </CheckBox>
                <CheckBox
                    x:Name="chkInfo"
                    Margin="7"
                    Command="{Binding Path=CheckTraceLevel}"
                    Foreground="Blue"
                    IsChecked="{Binding IsInfoChecked, Mode=TwoWay}">
                    Info
                </CheckBox>
                <CheckBox
                    x:Name="chkVerbose"
                    Margin="7"
                    Command="{Binding Path=CheckTraceLevel}"
                    Foreground="Purple"
                    IsChecked="{Binding IsVerboseChecked, Mode=TwoWay}">
                    Verbose
                </CheckBox>
                <Button Margin="7,7,7,7" Command="{Binding Path=ClearAll}">Clear All</Button>
                <CheckBox
                    x:Name="chkTopWindow"
                    Margin="7,20,7,7"
                    Command="{Binding Path=CheckTopWindow}"
                    Content="Top Window"
                    IsChecked="{Binding IsTopWindowChecked}"
                    Visibility="{Binding IsPlugin, Converter={StaticResource BoolToVisibilityConverter}}" />
                <CheckBox
                    x:Name="chkAutoSelectLastItem"
                    Margin="7,7,7,7"
                    Command="{Binding Path=CheckAutoSelectLastItem}"
                    Content="Auto To Last Item"
                    IsChecked="{Binding IsAutoSelectLastItem}" />
                <StackPanel Margin="7" Orientation="Vertical">
                    <TextBlock
                        Margin="7"
                        Text="Log Level"
                        Visibility="{Binding IsPlugin, Converter={StaticResource BoolToVisibilityConverter}}" />
                    <ComboBox
                        Name="_logLevel"
                        Width="100"
                        HorizontalAlignment="Left"
                        ItemsSource="{Binding LogLevels, Mode=OneWay}"
                        SelectedItem="{Binding SelectedLogLevel, Mode=TwoWay}"
                        Visibility="{Binding IsPlugin, Converter={StaticResource BoolToVisibilityConverter}}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding LogLevelSelectionChanged}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                    <TextBlock
                        Margin="7"
                        Text="Show Native Log"
                        Visibility="{Binding IsPlugin, Converter={StaticResource BoolToVisibilityConverter}}" />
                    <ComboBox
                        Name="_showNativeLog"
                        Width="100"
                        HorizontalAlignment="Left"
                        ItemsSource="{Binding LogTypes, Mode=OneWay}"
                        SelectedItem="{Binding SelectedLogType, Mode=TwoWay}"
                        Visibility="{Binding IsPlugin, Converter={StaticResource BoolToVisibilityConverter}}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding ShowNativeLogSelectionChanged}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                    <!--<CheckBox Content="Show Native Log" Command="{Binding Path=ShowNativeLog}" x:Name="showNativeLogButton"/>-->
                    <TextBlock
                        Foreground="Red"
                        Text="{Binding ErrorMessage}"
                        TextWrapping="Wrap" />
                </StackPanel>
            </StackPanel>
        </GroupBox>
        <GroupBox
            Grid.Column="1"
            Margin="7"
            Style="{Binding null}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="80" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="23" />
                </Grid.RowDefinitions>
                <Grid Margin="7,7,7,2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30" />
                        <RowDefinition Height="30" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="120" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Margin="5" Text="Include Keywords:" />
                    <TextBox
                        Grid.Column="1"
                        Margin="2"
                        behaviors:TextBoxBehaviour.TextChangedCommand="{Binding KeyWordsChanged}"
                        Style="{Binding null}"
                        Text="{Binding KeyWords, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock
                        Grid.Row="1"
                        Margin="5"
                        Text="Exclude Keywords:" />
                    <TextBox
                        Grid.Row="1"
                        Grid.Column="1"
                        Margin="2"
                        behaviors:TextBoxBehaviour.TextChangedCommand="{Binding KeyWordsChanged}"
                        Style="{Binding null}"
                        Text="{Binding ExcludeKeyWords, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </Grid>
                <ListBox
                    x:Name="lstLogger"
                    Grid.Row="1"
                    Margin="7,2,7,7"
                    AllowDrop="True"
                    DragEnter="lstLogger_DragEnter"
                    ItemContainerStyle="{StaticResource ListBoxItemContainerStyle}"
                    ItemsSource="{Binding LoggingMessages, Mode=OneWay}"
                    ScrollViewer.CanContentScroll="True"
                    ScrollViewer.VerticalScrollBarVisibility="Visible"
                    SelectedItem="{Binding SelectedMessage, Mode=TwoWay}"
                    SelectionMode="Extended">
                    <ListBox.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}">#FF3399FF</SolidColorBrush>
                    </ListBox.Resources>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding ItemSelectionChanged}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type models:LoggingMessage}">
                            <Grid>
                                <TextBlock
                                    Margin="0,1,0,0"
                                    Foreground="{Binding Color}"
                                    Text="{Binding Content}"
                                    TextWrapping="Wrap" />
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <StackPanel Grid.Row="2" Orientation="Horizontal">
                    <TextBlock Text=" Records : " />
                    <TextBlock Text="{Binding Path=Items.Count, ElementName=lstLogger}" />
                </StackPanel>
            </Grid>
        </GroupBox>
    </Grid>
</controls:UiServiceAwareWindow>







